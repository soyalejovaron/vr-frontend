{"version":3,"file":"material-chips.umd.js","sources":["../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../src/material/chips/chip.ts","../../../../../src/material/chips/chip-default-options.ts","../../../../../src/material/chips/chip-input.ts","../../../../../src/material/chips/chip-list.ts","../../../../../src/material/chips/chips-module.ts","../../../../../src/material/chips/public-api.ts","../../../../../src/material/chips/index.ts"],"names":["InjectionToken","mixinTabIndex","mixinColor","mixinDisableRipple","Directive","Subject","EventEmitter","RippleRenderer","coerceBooleanProperty","DELETE","BACKSPACE","SPACE","take","ElementRef","NgZone","Platform","Optional","Inject","MAT_RIPPLE_GLOBAL_OPTIONS","ChangeDetectorRef","DOCUMENT","ANIMATION_MODULE_TYPE","Attribute","ContentChild","Input","Output","TAB","hasModifierKey","mixinErrorState","nextUniqueId","merge","FocusKeyManager","takeUntil","startWith","SelectionModel","Component","MatFormFieldControl","ViewEncapsulation","ChangeDetectionStrategy","Directionality","NgForm","FormGroupDirective","ErrorStateMatcher","NgControl","Self","ContentChildren","ENTER","NgModule","MatCommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {BACKSPACE, DELETE, SPACE} from '@angular/cdk/keycodes';\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Attribute,\n  ChangeDetectorRef,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisableRipple,\n  mixinTabIndex,\n  RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\n\n/** Represents an event fired on an individual `mat-chip`. */\nexport interface MatChipEvent {\n  /** The chip the event was fired on. */\n  chip: MatChip;\n}\n\n/** Event object emitted by MatChip when selected or deselected. */\nexport class MatChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    public source: MatChip,\n    /** Whether the chip that emitted the event is selected. */\n    public selected: boolean,\n    /** Whether the selection change was a result of a user interaction. */\n    public isUserInput = false) { }\n}\n\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_CHIP_REMOVE = new InjectionToken<MatChipRemove>('MatChipRemove');\n\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_CHIP_AVATAR = new InjectionToken<MatChipAvatar>('MatChipAvatar');\n\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_CHIP_TRAILING_ICON =\n    new InjectionToken<MatChipTrailingIcon>('MatChipTrailingIcon');\n\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nabstract class MatChipBase {\n  abstract disabled: boolean;\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatChipMixinBase: CanColorCtor & CanDisableRippleCtor &\n    HasTabIndexCtor & typeof MatChipBase =\n      mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-avatar, [matChipAvatar]',\n  host: {'class': 'mat-chip-avatar'},\n  providers: [{provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar}]\n})\nexport class MatChipAvatar {}\n\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n  host: {'class': 'mat-chip-trailing-icon'},\n  providers: [{provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon}],\n})\nexport class MatChipTrailingIcon {}\n\n\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\n@Directive({\n  selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n  inputs: ['color', 'disableRipple', 'tabIndex'],\n  exportAs: 'matChip',\n  host: {\n    'class': 'mat-chip mat-focus-indicator',\n    '[attr.tabindex]': 'disabled ? null : tabIndex',\n    'role': 'option',\n    '[class.mat-chip-selected]': 'selected',\n    '[class.mat-chip-with-avatar]': 'avatar',\n    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n    '[class.mat-chip-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationsDisabled',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class MatChip extends _MatChipMixinBase implements FocusableOption, OnDestroy, CanColor,\n  CanDisableRipple, RippleTarget, HasTabIndex {\n\n  /** Reference to the RippleRenderer for the chip. */\n  private _chipRipple: RippleRenderer;\n\n  /**\n   * Reference to the element that acts as the chip's ripple target. This element is\n   * dynamically added as a child node of the chip. The chip itself cannot be used as the\n   * ripple target because it must be the host of the focus indicator.\n   */\n  private _chipRippleTarget: HTMLElement;\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the chip ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._animationsDisabled ||\n           !!this.rippleConfig.disabled;\n  }\n\n  /** Whether the chip has focus. */\n  _hasFocus: boolean = false;\n\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled: boolean;\n\n  /** Whether the chip list is selectable */\n  chipListSelectable: boolean = true;\n\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple: boolean = false;\n\n  /** Whether the chip list as a whole is disabled. */\n  _chipListDisabled: boolean = false;\n\n  /** The chip avatar */\n  @ContentChild(MAT_CHIP_AVATAR) avatar: MatChipAvatar;\n\n  /** The chip's trailing icon. */\n  @ContentChild(MAT_CHIP_TRAILING_ICON) trailingIcon: MatChipTrailingIcon;\n\n  /** The chip's remove toggler. */\n  @ContentChild(MAT_CHIP_REMOVE) removeIcon: MatChipRemove;\n\n  /** Whether the chip is selected. */\n  @Input()\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const coercedValue = coerceBooleanProperty(value);\n\n    if (coercedValue !== this._selected) {\n      this._selected = coercedValue;\n      this._dispatchSelectionChange();\n    }\n  }\n  protected _selected: boolean = false;\n\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value !== undefined\n      ? this._value\n      : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) { this._value = value; }\n  protected _value: any;\n\n  /**\n   * Whether or not the chip is selectable. When a chip is not selectable,\n   * changes to its selected state are always ignored. By default a chip is\n   * selectable, and it becomes non-selectable if its parent chip list is\n   * not selectable.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable && this.chipListSelectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = true;\n\n  /** Whether the chip is disabled. */\n  @Input()\n  get disabled(): boolean { return this._chipListDisabled || this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  protected _disabled: boolean = false;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean { return this._removable; }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<MatChipEvent>();\n\n  /** Emits when the chip is blured. */\n  readonly _onBlur = new Subject<MatChipEvent>();\n\n  /** Emitted when the chip is selected or deselected. */\n  @Output() readonly selectionChange: EventEmitter<MatChipSelectionChange> =\n      new EventEmitter<MatChipSelectionChange>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** The ARIA selected applied to the chip. */\n  get ariaSelected(): string | null {\n    // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n    // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n    return this.selectable && (this._chipListMultiple || this.selected) ?\n        this.selected.toString() : null;\n  }\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n                  globalRippleOptions: RippleGlobalOptions | null,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(DOCUMENT) _document: any,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string,\n              @Attribute('tabindex') tabIndex?: string) {\n    super(_elementRef);\n\n    this._addHostClassName();\n\n    // Dynamically create the ripple target, append it within the chip, and use it as the\n    // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n    // the proper styles.\n    this._chipRippleTarget = _document.createElement('div');\n    this._chipRippleTarget.classList.add('mat-chip-ripple');\n    this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n    this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n    this._chipRipple.setupTriggerEvents(_elementRef);\n\n    this.rippleConfig = globalRippleOptions || {};\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n  }\n\n  _addHostClassName() {\n    const basicChipAttrName = 'mat-basic-chip';\n    const element = this._elementRef.nativeElement as HTMLElement;\n\n    if (element.hasAttribute(basicChipAttrName) ||\n        element.tagName.toLowerCase() === basicChipAttrName) {\n      element.classList.add(basicChipAttrName);\n      return;\n    } else {\n      element.classList.add('mat-standard-chip');\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({chip: this});\n    this._chipRipple._removeTriggerEvents();\n  }\n\n  /** Selects the chip. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Deselects the chip. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._dispatchSelectionChange();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Select this chip and emit selected event */\n  selectViaInteraction(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange(true);\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput: boolean = false): boolean {\n    this._selected = !this.selected;\n    this._dispatchSelectionChange(isUserInput);\n    this._changeDetectorRef.markForCheck();\n    return this.selected;\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus(): void {\n    if (!this._hasFocus) {\n      this._elementRef.nativeElement.focus();\n      this._onFocus.next({chip: this});\n    }\n    this._hasFocus = true;\n  }\n\n  /**\n   * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n   * BACKSPACE keys are pressed.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this.removed.emit({chip: this});\n    }\n  }\n\n  /** Handles click events on the chip. */\n  _handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n    } else {\n      event.stopPropagation();\n    }\n  }\n\n  /** Handle custom key presses. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case SPACE:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\n\n  _blur(): void {\n    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n    // that moves focus not the next item. To work around the issue, we defer marking the chip\n    // as not focused until the next time the zone stabilizes.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        this._ngZone.run(() => {\n          this._hasFocus = false;\n          this._onBlur.next({chip: this});\n        });\n      });\n  }\n\n  private _dispatchSelectionChange(isUserInput = false) {\n    this.selectionChange.emit({\n      source: this,\n      isUserInput,\n      selected: this._selected\n    });\n  }\n\n  static ngAcceptInputType_selected: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n  static ngAcceptInputType_removable: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\n@Directive({\n  selector: '[matChipRemove]',\n  host: {\n    'class': 'mat-chip-remove mat-chip-trailing-icon',\n    '(click)': '_handleClick($event)',\n  },\n  providers: [{provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove}],\n})\nexport class MatChipRemove {\n  constructor(\n    protected _parentChip: MatChip,\n    elementRef: ElementRef<HTMLElement>) {\n    if (elementRef.nativeElement.nodeName === 'BUTTON') {\n      elementRef.nativeElement.setAttribute('type', 'button');\n    }\n   }\n\n  /** Calls the parent chip's public `remove()` method if applicable. */\n  _handleClick(event: Event): void {\n    const parentChip = this._parentChip;\n\n    if (parentChip.removable && !parentChip.disabled) {\n      parentChip.remove();\n    }\n\n    // We need to stop event propagation because otherwise the event will bubble up to the\n    // form field and cause the `onContainerClick` method to be invoked. This method would then\n    // reset the focused chip that has been focused after chip removal. Usually the parent\n    // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n    // that the chip is being removed before the event bubbles up.\n    event.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** Default options, for the chips module, that can be overridden. */\nexport interface MatChipsDefaultOptions {\n  /** The list of key codes that will trigger a chipEnd event. */\n  separatorKeyCodes: readonly number[] | ReadonlySet<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MAT_CHIPS_DEFAULT_OPTIONS =\n    new InjectionToken<MatChipsDefaultOptions>('mat-chips-default-options');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {hasModifierKey, TAB} from '@angular/cdk/keycodes';\nimport {Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output} from '@angular/core';\nimport {MatChipsDefaultOptions, MAT_CHIPS_DEFAULT_OPTIONS} from './chip-default-options';\nimport {MatChipList} from './chip-list';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n/** Represents an input event on a `matChipInput`. */\nexport interface MatChipInputEvent {\n  /** The native `<input>` element that the event is being fired for. */\n  input: HTMLInputElement;\n\n  /** The value of the input. */\n  value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\n@Directive({\n  selector: 'input[matChipInputFor]',\n  exportAs: 'matChipInput, matChipInputFor',\n  host: {\n    'class': 'mat-chip-input mat-input-element',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()',\n    '(focus)': '_focus()',\n    '(input)': '_onInput()',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.placeholder]': 'placeholder || null',\n    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n    '[attr.aria-required]': '_chipList && _chipList.required || null',\n  }\n})\nexport class MatChipInput implements MatChipTextControl, OnChanges {\n  /** Whether the control is focused. */\n  focused: boolean = false;\n  _chipList: MatChipList;\n\n  /** Register input for chip list */\n  @Input('matChipInputFor')\n  set chipList(value: MatChipList) {\n    if (value) {\n      this._chipList = value;\n      this._chipList.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  @Input('matChipInputAddOnBlur')\n  get addOnBlur(): boolean { return this._addOnBlur; }\n  set addOnBlur(value: boolean) { this._addOnBlur = coerceBooleanProperty(value); }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  @Input('matChipInputSeparatorKeyCodes')\n  separatorKeyCodes: readonly number[] | ReadonlySet<number> =\n      this._defaultOptions.separatorKeyCodes;\n\n  /** Emitted when a chip is to be added. */\n  @Output('matChipInputTokenEnd')\n  chipEnd: EventEmitter<MatChipInputEvent> = new EventEmitter<MatChipInputEvent>();\n\n  /** The input's placeholder text. */\n  @Input() placeholder: string = '';\n\n  /** Unique id for the input. */\n  @Input() id: string = `mat-chip-list-input-${nextUniqueId++}`;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled || (this._chipList && this._chipList.disabled); }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  /** Whether the input is empty. */\n  get empty(): boolean { return !this._inputElement.value; }\n\n  /** The native input element to which this directive is attached. */\n  protected _inputElement: HTMLInputElement;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement>,\n    @Inject(MAT_CHIPS_DEFAULT_OPTIONS) private _defaultOptions: MatChipsDefaultOptions) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n  }\n\n  ngOnChanges() {\n    this._chipList.stateChanges.next();\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event?: KeyboardEvent) {\n    // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n    // want to do this when going backwards, because focus should go back to the first chip.\n    if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n      this._chipList._allowFocusEscape();\n    }\n\n    this._emitChipEnd(event);\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipList.focused) {\n      this._chipList._blur();\n    }\n    this._chipList.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._chipList.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipList.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._inputElement.focus(options);\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  private _isSeparatorKey(event: KeyboardEvent) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n\n  static ngAcceptInputType_addOnBlur: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BACKSPACE} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {MatChip, MatChipEvent, MatChipSelectionChange} from './chip';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatChipListMixinBase: CanUpdateErrorStateCtor & typeof MatChipListBase =\n    mixinErrorState(MatChipListBase);\n\n\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the chip list value has changed. */\nexport class MatChipListChange {\n  constructor(\n    /** Chip list that emitted the event. */\n    public source: MatChipList,\n    /** Value of the chip list when the event was emitted. */\n    public value: any) { }\n}\n\n\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\n@Component({\n  selector: 'mat-chip-list',\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'matChipList',\n  host: {\n    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-required]': 'role ? required : null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.role]': 'role',\n    '[class.mat-chip-list-disabled]': 'disabled',\n    '[class.mat-chip-list-invalid]': 'errorState',\n    '[class.mat-chip-list-required]': 'required',\n    '[attr.aria-orientation]': 'ariaOrientation',\n    'class': 'mat-chip-list',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n    '(keydown)': '_keydown($event)',\n    '[id]': '_uid',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatChipList}],\n  styleUrls: ['chips.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatChipList extends _MatChipListMixinBase implements MatFormFieldControl<any>,\n  ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly controlType: string = 'mat-chip-list';\n\n  /**\n   * When a chip is destroyed, we store the index of the destroyed chip until the chips\n   * query list notifies about the update. This is necessary because we cannot determine an\n   * appropriate chip that should receive focus until the array of chips updated completely.\n   */\n  private _lastDestroyedChipIndex: number | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Subscription to focus changes in the chips. */\n  private _chipFocusSubscription: Subscription | null;\n\n  /** Subscription to blur changes in the chips. */\n  private _chipBlurSubscription: Subscription | null;\n\n  /** Subscription to selection changes in chips. */\n  private _chipSelectionSubscription: Subscription | null;\n\n  /** Subscription to remove changes in chips. */\n  private _chipRemoveSubscription: Subscription | null;\n\n  /** The chip input to add more chips */\n  protected _chipInput: MatChipTextControl;\n\n  /** Uid of the chip list */\n  _uid: string = `mat-chip-list-${nextUniqueId++}`;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n\n  /**\n   * User defined tab index.\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\n   */\n  _userTabIndex: number | null = null;\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<MatChip>;\n\n  /** Function when touched */\n  _onTouched = () => {};\n\n  /** Function when changed */\n  _onChange: (value: any) => void = () => {};\n\n  _selectionModel: SelectionModel<MatChip>;\n\n  /** The array of selected chips inside chip list. */\n  get selected(): MatChip[] | MatChip {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The ARIA role applied to the chip list. */\n  get role(): string | null { return this.empty ? null : 'listbox'; }\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Whether the user should be allowed to select multiple chips. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith(): (o1: any, o2: any) => boolean { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id(): string {\n    return this._chipInput ? this._chipInput.id : this._uid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  protected _required: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get placeholder(): string {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  protected _placeholder: string;\n\n  /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n  get focused(): boolean {\n    return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean { return !this.empty || this.focused; }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  protected _disabled: boolean = false;\n\n  /** Orientation of the chip list. */\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Whether or not this chip list is selectable. When a chip list is not selectable,\n   * the selected states for all the chips inside the chip list are always ignored.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n\n    if (this.chips) {\n      this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n    }\n  }\n  protected _selectable: boolean = true;\n\n  @Input()\n  set tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges(): Observable<MatChipSelectionChange> {\n    return merge(...this.chips.map(chip => chip.selectionChange));\n  }\n\n  /** Combined stream of all of the child chips' focus change events. */\n  get chipFocusChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onFocus));\n  }\n\n  /** Combined stream of all of the child chips' blur change events. */\n  get chipBlurChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onBlur));\n  }\n\n  /** Combined stream of all of the child chips' remove change events. */\n  get chipRemoveChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip.destroyed));\n  }\n\n  /** Event emitted when the selected chip list value has been changed by the user. */\n  @Output() readonly change: EventEmitter<MatChipListChange> =\n      new EventEmitter<MatChipListChange>();\n\n  /**\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The chip components contained within this chip list. */\n  @ContentChildren(MatChip, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  }) chips: QueryList<MatChip>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() _parentForm: NgForm,\n              @Optional() _parentFormGroup: FormGroupDirective,\n              _defaultErrorStateMatcher: ErrorStateMatcher,\n              /** @docs-private */\n              @Optional() @Self() public ngControl: NgControl) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatChip>(this.chips)\n      .withWrap()\n      .withVerticalOrientation()\n      .withHomeAndEnd()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n\n    if (this._dir) {\n      this._dir.change\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n    }\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._allowFocusEscape();\n    });\n\n    // When the list changes, re-subscribe\n    this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => {\n          this._syncChipsState();\n        });\n      }\n\n      this._resetChips();\n\n      // Reset chips selected/deselected status\n      this._initializeSelection();\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatChip>(this.multiple, undefined, false);\n    this.stateChanges.next();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n\n      if (this.ngControl.disabled !== this._disabled) {\n        this.disabled = !!this.ngControl.disabled;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.stateChanges.complete();\n\n    this._dropSubscriptions();\n  }\n\n\n  /** Associates an HTML input element with this chip list. */\n  registerInput(inputElement: MatChipTextControl): void {\n    this._chipInput = inputElement;\n\n    // We use this attribute to match the chip list to its input in test harnesses.\n    // Set the attribute directly here to avoid \"changed after checked\" errors.\n    this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    if (this.chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event: MouseEvent) {\n    if (!this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    // Focus on first element if there's no chipInput inside chip-list\n    if (this._chipInput && this._chipInput.focused) {\n      // do nothing\n    } else if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n      this.stateChanges.next();\n    } else {\n      this._focusInput(options);\n      this.stateChanges.next();\n    }\n  }\n\n  /** Attempt to focus an input if we have one. */\n  _focusInput(options?: FocusOptions) {\n    if (this._chipInput) {\n      this._chipInput.focus(options);\n    }\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keydown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n\n    // If they are on an empty input and hit backspace, focus the last chip\n    if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else if (target && target.classList.contains('mat-chip')) {\n      this._keyManager.onKeydown(event);\n      this.stateChanges.next();\n    }\n  }\n\n\n  /**\n   * Check the tab index as you should not be allowed to focus an empty list.\n   */\n  protected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n\n  /**\n   * If the amount of chips changed, we need to update the\n   * key manager state and focus the next closest chip.\n   */\n  protected _updateFocusForDestroyedChips() {\n    // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n    if (this._lastDestroyedChipIndex != null) {\n      if (this.chips.length) {\n        const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n        this._keyManager.setActiveItem(newChipIndex);\n      } else {\n        this.focus();\n      }\n    }\n\n    this._lastDestroyedChipIndex = null;\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let input = element as HTMLInputElement;\n      return !input.value;\n    }\n\n    return false;\n  }\n\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\n    this._clearSelection();\n    this.chips.forEach(chip => chip.deselect());\n\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const correspondingChip = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what chip the user interacted with last.\n      if (correspondingChip) {\n        if (isUserInput) {\n          this._keyManager.setActiveItem(correspondingChip);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  private _selectValue(value: any, isUserInput: boolean = true): MatChip | undefined {\n\n    const correspondingChip = this.chips.find(chip => {\n      return chip.value != null && this._compareWith(chip.value,  value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      this._selectionModel.select(correspondingChip);\n    }\n\n    return correspondingChip;\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl || this._value) {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n        this.stateChanges.next();\n      }\n    });\n  }\n\n  /**\n   * Deselects every chip in the list.\n   * @param skip Chip that should not be deselected.\n   */\n  private _clearSelection(skip?: MatChip): void {\n    this._selectionModel.clear();\n    this.chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n    this.stateChanges.next();\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.chips.forEach(chip => {\n        if (chip.selected) {\n          this._selectionModel.select(chip);\n        }\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\n  _blur() {\n    if (!this._hasFocusedChip()) {\n      this._keyManager.setActiveItem(-1);\n    }\n\n    if (!this.disabled) {\n      if (this._chipInput) {\n        // If there's a chip input, we should check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      } else {\n        // If there's no chip input, then mark the field as touched.\n        this._markAsTouched();\n      }\n    }\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /**\n   * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the list from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this._tabIndex !== -1) {\n      this._tabIndex = -1;\n\n      setTimeout(() => {\n        this._tabIndex = this._userTabIndex || 0;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _resetChips() {\n    this._dropSubscriptions();\n    this._listenToChipsFocus();\n    this._listenToChipsSelection();\n    this._listenToChipsRemoved();\n  }\n\n  private _dropSubscriptions() {\n    if (this._chipFocusSubscription) {\n      this._chipFocusSubscription.unsubscribe();\n      this._chipFocusSubscription = null;\n    }\n\n    if (this._chipBlurSubscription) {\n      this._chipBlurSubscription.unsubscribe();\n      this._chipBlurSubscription = null;\n    }\n\n    if (this._chipSelectionSubscription) {\n      this._chipSelectionSubscription.unsubscribe();\n      this._chipSelectionSubscription = null;\n    }\n\n    if (this._chipRemoveSubscription) {\n      this._chipRemoveSubscription.unsubscribe();\n      this._chipRemoveSubscription = null;\n    }\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsSelection(): void {\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n      event.source.selected\n        ? this._selectionModel.select(event.source)\n        : this._selectionModel.deselect(event.source);\n\n      // For single selection chip list, make sure the deselected value is unselected.\n      if (!this.multiple) {\n        this.chips.forEach(chip => {\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\n            chip.deselect();\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsFocus(): void {\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItem(chipIndex);\n      }\n      this.stateChanges.next();\n    });\n\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n  }\n\n  private _listenToChipsRemoved(): void {\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n      const chip = event.chip;\n      const chipIndex = this.chips.toArray().indexOf(event.chip);\n\n      // In case the chip that will be removed is currently focused, we temporarily store\n      // the index in order to be able to determine an appropriate sibling chip that will\n      // receive focus.\n      if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n        this._lastDestroyedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  private _originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  /** Checks whether any of the chips is focused. */\n  private _hasFocusedChip() {\n    return this.chips && this.chips.some(chip => chip._hasFocus);\n  }\n\n  /** Syncs the list's state with the individual chips. */\n  private _syncChipsState() {\n    if (this.chips) {\n      this.chips.forEach(chip => {\n        chip._chipListDisabled = this._disabled;\n        chip._chipListMultiple = this.multiple;\n      });\n    }\n  }\n\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ENTER} from '@angular/cdk/keycodes';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher, MatCommonModule} from '@angular/material/core';\nimport {MatChip, MatChipAvatar, MatChipRemove, MatChipTrailingIcon} from './chip';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipInput} from './chip-input';\nimport {MatChipList} from './chip-list';\n\nconst CHIP_DECLARATIONS = [\n  MatChipList,\n  MatChip,\n  MatChipInput,\n  MatChipRemove,\n  MatChipAvatar,\n  MatChipTrailingIcon,\n];\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: CHIP_DECLARATIONS,\n  declarations: CHIP_DECLARATIONS,\n  providers: [\n    ErrorStateMatcher,\n    {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      } as MatChipsDefaultOptions\n    }\n  ]\n})\nexport class MatChipsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './chips-module';\nexport * from './chip-list';\nexport * from './chip';\nexport * from './chip-input';\nexport * from './chip-default-options';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}