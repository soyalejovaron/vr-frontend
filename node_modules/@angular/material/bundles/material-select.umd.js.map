{"version":3,"file":"material-select.umd.js","sources":["../../../../../external/npm/node_modules/tslib/tslib.es6.js","../../../../../src/material/select/select-animations.ts","../../../../../src/material/select/select-errors.ts","../../../../../src/material/select/select.ts","../../../../../src/material/select/select-module.ts","../../../../../src/material/select/public-api.ts","../../../../../src/material/select/index.ts"],"names":["trigger","transition","query","animateChild","state","style","animate","InjectionToken","Overlay","mixinDisableRipple","mixinTabIndex","mixinDisabled","mixinErrorState","Directive","Subject","defer","startWith","switchMap","merge","take","EventEmitter","filter","map","coerceBooleanProperty","coerceNumberProperty","SelectionModel","distinctUntilChanged","takeUntil","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","hasModifierKey","A","ActiveDescendantKeyManager","ViewportRuler","ChangeDetectorRef","NgZone","ErrorStateMatcher","ElementRef","Directionality","Optional","NgForm","FormGroupDirective","MatFormField","Inject","MAT_FORM_FIELD","NgControl","Self","Attribute","LiveAnnouncer","ViewChild","CdkConnectedOverlay","Input","Output","_countGroupLabelsBeforeOption","_getOptionScrollPosition","Component","ViewEncapsulation","ChangeDetectionStrategy","MatFormFieldControl","MAT_OPTION_PARENT_COMPONENT","ContentChildren","MatOption","MAT_OPTGROUP","ContentChild","NgModule","CommonModule","OverlayModule","MatOptionModule","MatCommonModule","CdkScrollableModule","MatFormFieldModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  animate,\n  animateChild,\n  AnimationTriggerMetadata,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nexport const matSelectAnimations: {\n  readonly transformPanelWrap: AnimationTriggerMetadata;\n  readonly transformPanel: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation ensures the select's overlay panel animation (transformPanel) is called when\n   * closing the select.\n   * This is needed due to https://github.com/angular/angular/issues/23302\n   */\n  transformPanelWrap: trigger('transformPanelWrap', [\n      transition('* => void', query('@transformPanel', [animateChild()],\n          {optional: true}))\n  ]),\n\n  /**\n   * This animation transforms the select's overlay panel on and off the page.\n   *\n   * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n   * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n   * side to ensure the option text correctly overlaps the trigger text.\n   *\n   * When the panel is removed from the DOM, it simply fades out linearly.\n   */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      transform: 'scaleY(0.8)',\n      minWidth: '100%',\n      opacity: 0\n    })),\n    state('showing', style({\n      opacity: 1,\n      minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\n      transform: 'scaleY(1)'\n    })),\n    state('showing-multiple', style({\n      opacity: 1,\n      minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\n      transform: 'scaleY(1)'\n    })),\n    transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMatSelectDynamicMultipleError(): Error {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMatSelectNonArrayValueError(): Error {\n  return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMatSelectNonFunctionValueError(): Error {\n  return Error('`compareWith` must be a function.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ActiveDescendantKeyManager, LiveAnnouncer} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  A,\n  DOWN_ARROW,\n  ENTER,\n  hasModifierKey,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  SPACE,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  CdkConnectedOverlay,\n  ConnectedPosition,\n  Overlay,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  _countGroupLabelsBeforeOption,\n  _getOptionScrollPosition,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MAT_OPTGROUP,\n  MAT_OPTION_PARENT_COMPONENT,\n  MatOptgroup,\n  MatOption,\n  MatOptionSelectionChange,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinErrorState,\n  mixinTabIndex,\n  _MatOptionBase,\n} from '@angular/material/core';\nimport {MAT_FORM_FIELD, MatFormField, MatFormFieldControl} from '@angular/material/form-field';\nimport {defer, merge, Observable, Subject} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  startWith,\n  switchMap,\n  take,\n  takeUntil,\n} from 'rxjs/operators';\nimport {matSelectAnimations} from './select-animations';\nimport {\n  getMatSelectDynamicMultipleError,\n  getMatSelectNonArrayValueError,\n  getMatSelectNonFunctionValueError,\n} from './select-errors';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/**\n * The max height of the select's overlay panel.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n\n/**\n * The panel's padding on the x-axis.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nexport const SELECT_PANEL_PADDING_X = 16;\n\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The height of the select items in `em` units.\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nexport const SELECT_ITEM_HEIGHT_EM = 3;\n\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n *\n * @deprecated To be turned into a private variable.\n * @breaking-change 12.0.0\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MAT_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-select-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** Object that can be used to configure the default options for the select module. */\nexport interface MatSelectConfig {\n  /** Whether option centering should be disabled. */\n  disableOptionCentering?: boolean;\n\n  /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n  typeaheadDebounceInterval?: number;\n\n  /** Class or list of classes to be applied to the menu's overlay panel. */\n  overlayPanelClass?: string | string[];\n}\n\n/** Injection token that can be used to provide the default options the select module. */\nexport const MAT_SELECT_CONFIG = new InjectionToken<MatSelectConfig>('MAT_SELECT_CONFIG');\n\n/** @docs-private */\nexport const MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class MatSelectChange {\n  constructor(\n    /** Reference to the select that emitted the change event. */\n    public source: MatSelect,\n    /** Current value of the select that emitted the event. */\n    public value: any) { }\n}\n\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n  constructor(public _elementRef: ElementRef,\n              public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              public ngControl: NgControl) {}\n}\nconst _MatSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanDisableRippleCtor &\n    CanUpdateErrorStateCtor &\n    typeof MatSelectBase =\n        mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n\n\n\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_SELECT_TRIGGER = new InjectionToken<MatSelectTrigger>('MatSelectTrigger');\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({\n  selector: 'mat-select-trigger',\n  providers: [{provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger}],\n})\nexport class MatSelectTrigger {}\n\n/** Base class with all of the `MatSelect` functionality. */\n@Directive()\nexport abstract class _MatSelectBase<C> extends _MatSelectMixinBase implements AfterContentInit,\n    OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable, HasTabIndex,\n    MatFormFieldControl<any>, CanUpdateErrorState, CanDisableRipple {\n\n  /** All of the defined select options. */\n  abstract options: QueryList<_MatOptionBase>;\n\n  // TODO(crisbeto): this is only necessary for the non-MDC select, but it's technically a\n  // public API so we have to keep it. It should be deprecated and removed eventually.\n  /** All of the defined groups of options. */\n  abstract optionGroups: QueryList<MatOptgroup>;\n\n  /** User-supplied override of the trigger element. */\n  abstract customTrigger: {};\n\n  /**\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  abstract _positions: ConnectedPosition[];\n\n  /** Scrolls a particular option into the view. */\n  protected abstract _scrollOptionIntoView(index: number): void;\n\n  /** Called when the panel has been opened and the overlay has settled on its final position. */\n  protected abstract _positioningSettled(): void;\n\n  /** Creates a change event object that should be emitted by the select. */\n  protected abstract _getChangeEvent(value: any): C;\n\n  /** Factory function used to create a scroll strategy for this select. */\n  private _scrollStrategyFactory: () => ScrollStrategy;\n\n  /** Whether or not the overlay panel is open. */\n  private _panelOpen = false;\n\n  /** Comparison function to specify which option is displayed. Defaults to object equality. */\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /** Unique id for this input. */\n  private _uid = `mat-select-${nextUniqueId++}`;\n\n  /** Current `ariar-labelledby` value for the select trigger. */\n  private _triggerAriaLabelledBy: string | null = null;\n\n  /** Emits whenever the component is destroyed. */\n  protected readonly _destroy = new Subject<void>();\n\n  /** The aria-describedby attribute on the select for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Deals with the selection logic. */\n  _selectionModel: SelectionModel<MatOption>;\n\n  /** Manages keyboard events for options in the panel. */\n  _keyManager: ActiveDescendantKeyManager<MatOption>;\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => {};\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => {};\n\n  /** ID for the DOM node containing the select's value. */\n  _valueId = `mat-select-value-${nextUniqueId++}`;\n\n  /** Emits when the panel element is finished transforming in. */\n  _panelDoneAnimatingStream = new Subject<string>();\n\n  /** Strategy that will be used to handle scrolling while the select panel is open. */\n  _scrollStrategy: ScrollStrategy;\n\n  _overlayPanelClass: string | string[] = this._defaultOptions?.overlayPanelClass || '';\n\n  /** Whether the select is focused. */\n  get focused(): boolean {\n    return this._focused || this._panelOpen;\n  }\n  private _focused = false;\n\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mat-select';\n\n  /** Trigger that opens the select. */\n  @ViewChild('trigger') trigger: ElementRef;\n\n  /** Panel containing the select options. */\n  @ViewChild('panel') panel: ElementRef;\n\n  /**\n   * Overlay pane containing the options.\n   * @deprecated To be turned into a private API.\n   * @breaking-change 10.0.0\n   * @docs-private\n   */\n  @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n  /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** Placeholder to be shown if no value has been selected. */\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  /** Whether the component is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required: boolean = false;\n\n  /** Whether the user should be allowed to select multiple options. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n  private _multiple: boolean = false;\n\n  /** Whether to center the active option over the trigger. */\n  @Input()\n  get disableOptionCentering(): boolean { return this._disableOptionCentering; }\n  set disableOptionCentering(value: boolean) {\n    this._disableOptionCentering = coerceBooleanProperty(value);\n  }\n  private _disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n\n  /**\n   * Function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith() { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n\n  /** Value of the select control. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    // Always re-assign an array, because it might have been mutated.\n    if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n      if (this.options) {\n        this._setSelectionByValue(newValue);\n      }\n\n      this._value = newValue;\n    }\n  }\n  private _value: any;\n\n  /** Aria label of the select. */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /** Input that can be used to specify the `aria-labelledby` attribute. */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n  @Input()\n  get typeaheadDebounceInterval(): number { return this._typeaheadDebounceInterval; }\n  set typeaheadDebounceInterval(value: number) {\n    this._typeaheadDebounceInterval = coerceNumberProperty(value);\n  }\n  private _typeaheadDebounceInterval: number;\n\n  /**\n   * Function used to sort the values in a select in multiple mode.\n   * Follows the same logic as `Array.prototype.sort`.\n   */\n  @Input() sortComparator: (a: MatOption, b: MatOption, options: MatOption[]) => number;\n\n  /** Unique id of the element. */\n  @Input()\n  get id(): string { return this._id; }\n  set id(value: string) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  private _id: string;\n\n  /** Combined stream of all of the child options' change events. */\n  readonly optionSelectionChanges: Observable<MatOptionSelectionChange> = defer(() => {\n    const options = this.options;\n\n    if (options) {\n      return options.changes.pipe(\n        startWith(options),\n        switchMap(() => merge(...options.map(option => option.onSelectionChange)))\n      );\n    }\n\n    return this._ngZone.onStable\n      .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n  }) as Observable<MatOptionSelectionChange>;\n\n  /** Event emitted when the select panel has been toggled. */\n  @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the select has been opened. */\n  @Output('opened') readonly _openedStream: Observable<void> =\n      this.openedChange.pipe(filter(o => o), map(() => {}));\n\n  /** Event emitted when the select has been closed. */\n  @Output('closed') readonly _closedStream: Observable<void> =\n      this.openedChange.pipe(filter(o => !o), map(() => {}));\n\n   /** Event emitted when the selected value has been changed by the user. */\n  @Output() readonly selectionChange: EventEmitter<C> = new EventEmitter<C>();\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    protected _viewportRuler: ViewportRuler,\n    protected _changeDetectorRef: ChangeDetectorRef,\n    protected _ngZone: NgZone,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n    elementRef: ElementRef,\n    @Optional() private _dir: Directionality,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    @Optional() @Inject(MAT_FORM_FIELD) protected _parentFormField: MatFormField,\n    @Self() @Optional() public ngControl: NgControl,\n    @Attribute('tabindex') tabIndex: string,\n    @Inject(MAT_SELECT_SCROLL_STRATEGY) scrollStrategyFactory: any,\n    private _liveAnnouncer: LiveAnnouncer,\n    @Optional() @Inject(MAT_SELECT_CONFIG) private _defaultOptions?: MatSelectConfig) {\n    super(elementRef, _defaultErrorStateMatcher, _parentForm,\n          _parentFormGroup, ngControl);\n\n    if (this.ngControl) {\n      // Note: we provide the value accessor through here, instead of\n      // the `providers` to avoid running into a circular import.\n      this.ngControl.valueAccessor = this;\n    }\n\n    // Note that we only want to set this when the defaults pass it in, otherwise it should\n    // stay as `undefined` so that it falls back to the default in the key manager.\n    if (_defaultOptions?.typeaheadDebounceInterval != null) {\n      this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n    }\n\n    this._scrollStrategyFactory = scrollStrategyFactory;\n    this._scrollStrategy = this._scrollStrategyFactory();\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatOption>(this.multiple);\n    this.stateChanges.next();\n\n    // We need `distinctUntilChanged` here, because some browsers will\n    // fire the animation end event twice for the same animation. See:\n    // https://github.com/angular/angular/issues/24084\n    this._panelDoneAnimatingStream\n      .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n      .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n  }\n\n  ngAfterContentInit() {\n    this._initKeyManager();\n\n    this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n      event.added.forEach(option => option.select());\n      event.removed.forEach(option => option.deselect());\n    });\n\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n\n  ngDoCheck() {\n    const newAriaLabelledby = this._getTriggerAriaLabelledby();\n\n    // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n    // is computed as a result of a content query which can cause this binding to trigger a\n    // \"changed after checked\" error.\n    if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n      const element: HTMLElement = this._elementRef.nativeElement;\n      this._triggerAriaLabelledBy = newAriaLabelledby;\n      if (newAriaLabelledby) {\n        element.setAttribute('aria-labelledby', newAriaLabelledby);\n      } else {\n        element.removeAttribute('aria-labelledby');\n      }\n    }\n\n    if (this.ngControl) {\n      this.updateErrorState();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n    // the parent form field know to run change detection when the disabled state changes.\n    if (changes['disabled']) {\n      this.stateChanges.next();\n    }\n\n    if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n      this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this.stateChanges.complete();\n  }\n\n  /** Toggles the overlay panel open or closed. */\n  toggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n\n  /** Opens the overlay panel. */\n  open(): void {\n    if (this._canOpen()) {\n      this._panelOpen = true;\n      this._keyManager.withHorizontalOrientation(null);\n      this._highlightCorrectOption();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Closes the overlay panel and focuses the host element. */\n  close(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n      this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n      this._changeDetectorRef.markForCheck();\n      this._onTouched();\n    }\n  }\n\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /** Whether or not the overlay panel is open. */\n  get panelOpen(): boolean {\n    return this._panelOpen;\n  }\n\n  /** The currently selected option. */\n  get selected(): MatOption | MatOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The value displayed in the trigger. */\n  get triggerValue(): string {\n    if (this.empty) {\n      return '';\n    }\n\n    if (this._multiple) {\n      const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n\n  /** Whether the element is in RTL mode. */\n  _isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n\n  /** Handles all keydown events on the select. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n    }\n  }\n\n  /** Handles keyboard events while the select is closed. */\n  private _handleClosedKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n                       keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n    const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n    const manager = this._keyManager;\n\n    // Open the select on ALT + arrow key to match the native <select>\n    if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n      ((this.multiple || event.altKey) && isArrowKey)) {\n      event.preventDefault(); // prevents the page from scrolling down when pressing space\n      this.open();\n    } else if (!this.multiple) {\n      const previouslySelectedOption = this.selected;\n      manager.onKeydown(event);\n      const selectedOption = this.selected;\n\n      // Since the value has changed, we need to announce it ourselves.\n      if (selectedOption && previouslySelectedOption !== selectedOption) {\n        // We set a duration on the live announcement, because we want the live element to be\n        // cleared after a while so that users can't navigate to it using the arrow keys.\n        this._liveAnnouncer.announce((selectedOption as MatOption).viewValue, 10000);\n      }\n    }\n  }\n\n  /** Handles keyboard events when the selected is open. */\n  private _handleOpenKeydown(event: KeyboardEvent): void {\n    const manager = this._keyManager;\n    const keyCode = event.keyCode;\n    const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n    const isTyping = manager.isTyping();\n\n    if (isArrowKey && event.altKey) {\n      // Close the select on ALT + arrow key to match the native <select>\n      event.preventDefault();\n      this.close();\n      // Don't do anything in this case if the user is typing,\n      // because the typing sequence can include the space key.\n    } else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n      !hasModifierKey(event)) {\n      event.preventDefault();\n      manager.activeItem._selectViaInteraction();\n    } else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n      event.preventDefault();\n      const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n\n      this.options.forEach(option => {\n        if (!option.disabled) {\n          hasDeselectedOptions ? option.select() : option.deselect();\n        }\n      });\n    } else {\n      const previouslyFocusedIndex = manager.activeItemIndex;\n\n      manager.onKeydown(event);\n\n      if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n          manager.activeItemIndex !== previouslyFocusedIndex) {\n        manager.activeItem._selectViaInteraction();\n      }\n    }\n  }\n\n  _onFocus() {\n    if (!this.disabled) {\n      this._focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n   * \"blur\" to the panel when it opens, causing a false positive.\n   */\n  _onBlur() {\n    this._focused = false;\n\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Callback that is invoked when the overlay panel has been attached.\n   */\n  _onAttached(): void {\n    this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n      this._changeDetectorRef.detectChanges();\n      this._positioningSettled();\n    });\n  }\n\n  /** Returns the theme to be used on the panel. */\n  _getPanelTheme(): string {\n    return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n  }\n\n  /** Whether the select has a value. */\n  get empty(): boolean {\n    return !this._selectionModel || this._selectionModel.isEmpty();\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n      this.stateChanges.next();\n    });\n  }\n\n  /**\n   * Sets the selected option based on a value. If no option can be\n   * found with the designated value, the select trigger is cleared.\n   */\n  private _setSelectionByValue(value: any | any[]): void {\n    this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n    this._selectionModel.clear();\n\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getMatSelectNonArrayValueError();\n      }\n\n      value.forEach((currentValue: any) => this._selectValue(currentValue));\n      this._sortValues();\n    } else {\n      const correspondingOption = this._selectValue(value);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.updateActiveItem(correspondingOption);\n      } else if (!this.panelOpen) {\n        // Otherwise reset the highlighted option. Note that we only want to do this while\n        // closed, because doing it while open can shift the user's focus unnecessarily.\n        this._keyManager.updateActiveItem(-1);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Finds and selects and option based on its value.\n   * @returns Option that has the corresponding value.\n   */\n  private _selectValue(value: any): MatOption | undefined {\n    const correspondingOption = this.options.find((option: MatOption) => {\n      // Skip options that are already in the model. This allows us to handle cases\n      // where the same primitive value is selected multiple times.\n      if (this._selectionModel.isSelected(option)) {\n        return false;\n      }\n\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value,  value);\n      } catch (error) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      this._selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n\n  /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n  private _initKeyManager() {\n    this._keyManager = new ActiveDescendantKeyManager<MatOption>(this.options)\n      .withTypeAhead(this._typeaheadDebounceInterval)\n      .withVerticalOrientation()\n      .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n      .withHomeAndEnd()\n      .withAllowedModifierKeys(['shiftKey']);\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        // Select the active item when tabbing away. This is consistent with how the native\n        // select behaves. Note that we only want to do this in single selection mode.\n        if (!this.multiple && this._keyManager.activeItem) {\n          this._keyManager.activeItem._selectViaInteraction();\n        }\n\n        // Restore focus to the trigger before closing. Ensures that the focus\n        // position won't be lost if the user got focus into the overlay.\n        this.focus();\n        this.close();\n      }\n    });\n\n    this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this._panelOpen && this.panel) {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n      } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n        this._keyManager.activeItem._selectViaInteraction();\n      }\n    });\n  }\n\n  /** Drops current option subscriptions and IDs and resets from scratch. */\n  private _resetOptions(): void {\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n    this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n      this._onSelect(event.source, event.isUserInput);\n\n      if (event.isUserInput && !this.multiple && this._panelOpen) {\n        this.close();\n        this.focus();\n      }\n    });\n\n    // Listen to changes in the internal state of the options and react accordingly.\n    // Handles cases like the labels of the selected options changing.\n    merge(...this.options.map(option => option._stateChanges))\n      .pipe(takeUntil(changedOrDestroyed))\n      .subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n      });\n  }\n\n  /** Invoked when an option is clicked. */\n  private _onSelect(option: MatOption, isUserInput: boolean): void {\n    const wasSelected = this._selectionModel.isSelected(option);\n\n    if (option.value == null && !this._multiple) {\n      option.deselect();\n      this._selectionModel.clear();\n\n      if (this.value != null) {\n        this._propagateChanges(option.value);\n      }\n    } else {\n      if (wasSelected !== option.selected) {\n        option.selected ? this._selectionModel.select(option) :\n                          this._selectionModel.deselect(option);\n      }\n\n      if (isUserInput) {\n        this._keyManager.setActiveItem(option);\n      }\n\n      if (this.multiple) {\n        this._sortValues();\n\n        if (isUserInput) {\n          // In case the user selected the option with their mouse, we\n          // want to restore focus back to the trigger, in order to\n          // prevent the select keyboard controls from clashing with\n          // the ones from `mat-option`.\n          this.focus();\n        }\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n\n    this.stateChanges.next();\n  }\n\n  /** Sorts the selected values in the selected based on their order in the panel. */\n  private _sortValues() {\n    if (this.multiple) {\n      const options = this.options.toArray();\n\n      this._selectionModel.sort((a, b) => {\n        return this.sortComparator ? this.sortComparator(a, b, options) :\n                                     options.indexOf(a) - options.indexOf(b);\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (this.multiple) {\n      valueToEmit = (this.selected as MatOption[]).map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? (this.selected as MatOption).value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Highlights the selected item. If no option is selected, it will highlight\n   * the first item instead.\n   */\n  private _highlightCorrectOption(): void {\n    if (this._keyManager) {\n      if (this.empty) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n      }\n    }\n  }\n\n  /** Whether the panel is allowed to open. */\n  protected _canOpen(): boolean {\n    return !this._panelOpen && !this.disabled && this.options?.length > 0;\n  }\n\n  /** Focuses the select element. */\n  focus(options?: FocusOptions): void {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Gets the aria-labelledby for the select panel. */\n  _getPanelAriaLabelledby(): string | null {\n    if (this.ariaLabel) {\n      return null;\n    }\n\n    const labelId = this._parentFormField?.getLabelId();\n    const labelExpression = (labelId ? labelId + ' ' : '');\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n\n  /** Determines the `aria-activedescendant` to be set on the host. */\n  _getAriaActiveDescendant(): string | null {\n    if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n      return this._keyManager.activeItem.id;\n    }\n\n    return null;\n  }\n\n  /** Gets the aria-labelledby of the select component trigger. */\n  private _getTriggerAriaLabelledby(): string | null {\n    if (this.ariaLabel) {\n      return null;\n    }\n\n    const labelId = this._parentFormField?.getLabelId();\n    let value = (labelId ? labelId + ' ' : '') + this._valueId;\n\n    if (this.ariaLabelledby) {\n      value += ' ' + this.ariaLabelledby;\n    }\n\n    return value;\n  }\n\n  /** Called when the overlay panel is done animating. */\n  protected _panelDoneAnimating(isOpen: boolean) {\n    this.openedChange.emit(isOpen);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    this.focus();\n    this.open();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean {\n    return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_disableOptionCentering: BooleanInput;\n  static ngAcceptInputType_typeaheadDebounceInterval: NumberInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n\n@Component({\n  selector: 'mat-select',\n  exportAs: 'matSelect',\n  templateUrl: 'select.html',\n  styleUrls: ['select.css'],\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'combobox',\n    'aria-autocomplete': 'none',\n    // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n    // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n    // value. At some point we should try to switch it back to being `listbox`.\n    'aria-haspopup': 'true',\n    'class': 'mat-select',\n    '[attr.id]': 'id',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n    '[attr.aria-expanded]': 'panelOpen',\n    '[attr.aria-label]': 'ariaLabel || null',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n    '[class.mat-select-disabled]': 'disabled',\n    '[class.mat-select-invalid]': 'errorState',\n    '[class.mat-select-required]': 'required',\n    '[class.mat-select-empty]': 'empty',\n    '[class.mat-select-multiple]': 'multiple',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    matSelectAnimations.transformPanelWrap,\n    matSelectAnimations.transformPanel\n  ],\n  providers: [\n    {provide: MatFormFieldControl, useExisting: MatSelect},\n    {provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect}\n  ],\n})\nexport class MatSelect extends _MatSelectBase<MatSelectChange> implements OnInit {\n  /** The scroll position of the overlay panel, calculated to center the selected option. */\n  private _scrollTop = 0;\n\n  /** The last measured value for the trigger's client bounding rect. */\n  _triggerRect: ClientRect;\n\n  /** The cached font-size of the trigger element. */\n  _triggerFontSize = 0;\n\n  /** The value of the select panel's transform-origin property. */\n  _transformOrigin: string = 'top';\n\n  /**\n   * The y-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text.\n   * when the panel opens. Will change based on the y-position of the selected option.\n   */\n  _offsetY = 0;\n\n  @ContentChildren(MatOption, {descendants: true}) options: QueryList<MatOption>;\n\n  @ContentChildren(MAT_OPTGROUP, {descendants: true}) optionGroups: QueryList<MatOptgroup>;\n\n  @ContentChild(MAT_SELECT_TRIGGER) customTrigger: MatSelectTrigger;\n\n  _positions: ConnectedPosition[] = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n\n  /**\n   * Calculates the scroll position of the select's overlay panel.\n   *\n   * Attempts to center the selected option in the panel. If the option is\n   * too high or too low in the panel to be scrolled to the center, it clamps the\n   * scroll position to the min or max scroll positions respectively.\n   */\n  _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n                          maxScroll: number): number {\n    const itemHeight = this._getItemHeight();\n    const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n    const halfOptionHeight = itemHeight / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this._viewportRuler.change().pipe(takeUntil(this._destroy)).subscribe(() => {\n      if (this.panelOpen) {\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        this._changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  open(): void {\n    if (super._canOpen()) {\n      super.open();\n      this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n      // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n      // `parseInt` ignores the trailing 'px' and converts this to a number.\n      this._triggerFontSize =\n          parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n      this._calculateOverlayPosition();\n\n      // Set the font size on the panel element once it exists.\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        if (this._triggerFontSize && this.overlayDir.overlayRef &&\n            this.overlayDir.overlayRef.overlayElement) {\n          this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n        }\n      });\n    }\n  }\n\n  /** Scrolls the active option into view. */\n  protected _scrollOptionIntoView(index: number): void {\n    const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n    const itemHeight = this._getItemHeight();\n\n    this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n      (index + labelCount) * itemHeight,\n      itemHeight,\n      this.panel.nativeElement.scrollTop,\n      SELECT_PANEL_MAX_HEIGHT\n    );\n  }\n\n  protected _positioningSettled() {\n    this._calculateOverlayOffsetX();\n    this.panel.nativeElement.scrollTop = this._scrollTop;\n  }\n\n  protected _panelDoneAnimating(isOpen: boolean) {\n    if (this.panelOpen) {\n      this._scrollTop = 0;\n    } else {\n      this.overlayDir.offsetX = 0;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    super._panelDoneAnimating(isOpen);\n  }\n\n  protected _getChangeEvent(value: any) {\n    return new MatSelectChange(this, value);\n  }\n\n  /**\n   * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n   * This must be adjusted to align the selected option text over the trigger text when\n   * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n   * can't be calculated until the panel has been attached, because we need to know the\n   * content width in order to constrain the panel within the viewport.\n   */\n  private _calculateOverlayOffsetX(): void {\n    const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const viewportSize = this._viewportRuler.getViewportSize();\n    const isRtl = this._isRtl();\n    const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                                         SELECT_PANEL_PADDING_X * 2;\n    let offsetX: number;\n\n    // Adjust the offset, depending on the option padding.\n    if (this.multiple) {\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n    } else if (this.disableOptionCentering) {\n      offsetX = SELECT_PANEL_PADDING_X;\n    } else {\n      let selected = this._selectionModel.selected[0] || this.options.first;\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n    }\n\n    // Invert the offset in LTR.\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    // Determine how much the select overflows on each side.\n    const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n    const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n                          + (isRtl ? 0 : paddingWidth);\n\n    // If the element overflows on either side, reduce the offset to allow it to fit.\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n    // blurry content in some browsers.\n    this.overlayDir.offsetX = Math.round(offsetX);\n    this.overlayDir.overlayRef.updatePosition();\n  }\n\n  /**\n   * Calculates the y-offset of the select's overlay panel in relation to the\n   * top start corner of the trigger. It has to be adjusted in order for the\n   * selected option to be aligned over the trigger when the panel opens.\n   */\n  private _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n                                  maxScroll: number): number {\n    const itemHeight = this._getItemHeight();\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n    const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n    let optionOffsetFromPanelTop: number;\n\n    // Disable offset if requested by user by returning 0 as value to offset\n    if (this.disableOptionCentering) {\n      return 0;\n    }\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * itemHeight;\n    } else if (this._scrollTop === maxScroll) {\n      const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n      const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // The first item is partially out of the viewport. Therefore we need to calculate what\n      // portion of it is shown in the viewport and account for it in our offset.\n      let partialItemHeight =\n          itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height difference,\n    // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n    // The value is rounded to prevent some browsers from blurring the content.\n    return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n  }\n\n  /**\n   * Checks that the attempted overlay position will fit within the viewport.\n   * If it will not fit, tries to adjust the scroll position and the associated\n   * y-offset so the panel can open fully on-screen. If it still won't fit,\n   * sets the offset back to 0 to allow the fallback position to take over.\n   */\n  private _checkOverlayWithinViewport(maxScroll: number): void {\n    const itemHeight = this._getItemHeight();\n    const viewportSize = this._viewportRuler.getViewportSize();\n\n    const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const bottomSpaceAvailable =\n        viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const panelHeightTop = Math.abs(this._offsetY);\n    const totalPanelHeight =\n        Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n    const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n\n  /** Adjusts the overlay panel up to fit in the viewport. */\n  private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    // Browsers ignore fractional scroll offsets, so we need to round.\n    const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n\n  /** Adjusts the overlay panel down to fit in the viewport. */\n  private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n                           maxScroll: number) {\n    // Browsers ignore fractional scroll offsets, so we need to round.\n    const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n\n  /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n  private _calculateOverlayPosition(): void {\n    const itemHeight = this._getItemHeight();\n    const items = this._getItemCount();\n    const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n    const scrollContainerHeight = items * itemHeight;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const maxScroll = scrollContainerHeight - panelHeight;\n\n    // If no value is selected we open the popup to the first item.\n    let selectedOptionOffset: number;\n\n    if (this.empty) {\n      selectedOptionOffset = 0;\n    } else {\n      selectedOptionOffset =\n          Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n    }\n\n    selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n        this.optionGroups);\n\n    // We must maintain a scroll buffer so the selected option will be scrolled to the\n    // center of the overlay panel rather than the top.\n    const scrollBuffer = panelHeight / 2;\n    this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n    this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n\n  /** Sets the transform origin point based on the selected option. */\n  private _getOriginBasedOnOption(): string {\n    const itemHeight = this._getItemHeight();\n    const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n    const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n    return `50% ${originY}px 0px`;\n  }\n\n  /** Calculates the height of the select's options. */\n  private _getItemHeight(): number {\n    return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n  }\n\n  /** Calculates the amount of items in the select. This includes options and group labels. */\n  private _getItemCount(): number {\n    return this.options.length + this.optionGroups.length;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatOptionModule} from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelect, MatSelectTrigger} from './select';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatOptionModule,\n    MatCommonModule,\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatFormFieldModule,\n    MatSelect,\n    MatSelectTrigger,\n    MatOptionModule,\n    MatCommonModule\n  ],\n  declarations: [MatSelect, MatSelectTrigger],\n  providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class MatSelectModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './select-module';\nexport * from './select';\nexport * from './select-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}