{"version":3,"file":"stepper.js","sources":["../../../../../../src/material/stepper/step-label.ts","../../../../../../src/material/stepper/stepper-intl.ts","../../../../../../src/material/stepper/step-header.ts","../../../../../../src/material/stepper/stepper-animations.ts","../../../../../../src/material/stepper/stepper-icon.ts","../../../../../../src/material/stepper/stepper.ts","../../../../../../src/material/stepper/stepper-button.ts","../../../../../../src/material/stepper/stepper-module.ts","../../../../../../src/material/stepper/public-api.ts","../../../../../../src/material/stepper/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n  AfterViewInit,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\nimport {CanColorCtor, mixinColor, CanColor} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nclass MatStepHeaderBase extends CdkStepHeader {\n  constructor(elementRef: ElementRef) {\n    super(elementRef);\n  }\n}\n\nconst _MatStepHeaderMixinBase: CanColorCtor & typeof MatStepHeaderBase =\n    mixinColor(MatStepHeaderBase, 'primary');\n\n@Component({\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-step-header mat-focus-indicator',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends _MatStepHeaderMixinBase implements AfterViewInit, OnDestroy,\n  CanColor {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus(origin?: FocusOrigin, options?: FocusOptions) {\n    if (origin) {\n      this._focusMonitor.focusVia(this._elementRef, origin, options);\n    } else {\n      this._elementRef.nativeElement.focus(options);\n    }\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    // Transition to `inherit`, rather than `visible`,\n    // because visibility on a child element the one from the parent,\n    // making this element focusable inside of a `hidden` element.\n    state('current', style({transform: 'none', visibility: 'inherit'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    // Transition to `inherit`, rather than `visible`,\n    // because visibility on a child element the one from the parent,\n    // making this element focusable inside of a `hidden` element.\n    state('current', style({height: '*', visibility: 'inherit'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher, ThemePalette} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [\n    {provide: ErrorStateMatcher, useExisting: MatStep},\n    {provide: CdkStep, useExisting: MatStep},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  /** Theme color for the particular step. */\n  @Input() color: ThemePalette;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  @ContentChildren(MatStep, {descendants: true}) _steps: QueryList<MatStep>;\n\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  readonly steps: QueryList<MatStep> = new QueryList<MatStep>();\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon, {descendants: true}) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Theme color for all of the steps in stepper. */\n  @Input() color: ThemePalette;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._stateChanged();\n    });\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    'class': 'mat-stepper-next',\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    'class': 'mat-stepper-previous',\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper-module';\nexport * from './step-label';\nexport * from './stepper';\nexport * from './stepper-button';\nexport * from './step-header';\nexport * from './stepper-intl';\nexport * from './stepper-animations';\nexport * from './stepper-icon';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}