{"version":3,"file":"angular-fire-auth.umd.js","sources":["../../../src/auth/base.ts","../../../src/auth/auth.ts","../../../src/auth/auth.module.ts"],"names":["InjectionToken","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","Subject","of","observeOn","switchMap","map","ɵfirebaseAppFactory","ɵfetchInstance","shareReplay","isPlatformServer","first","Observable","switchMapTo","subscribeOn","from","merge","filter","ɵlazySDKProxy","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","PLATFORM_ID","NgZone","ɵapplyMixins","NgModule"],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  app: null,\n  applyActionCode: null,\n  checkActionCode: null,\n  confirmPasswordReset: null,\n  createUserWithEmailAndPassword: null,\n  currentUser: null,\n  fetchSignInMethodsForEmail: null,\n  isSignInWithEmailLink: null,\n  getRedirectResult: null,\n  languageCode: null,\n  settings: null,\n  onAuthStateChanged: null,\n  onIdTokenChanged: null,\n  sendSignInLinkToEmail: null,\n  sendPasswordResetEmail: null,\n  setPersistence: null,\n  signInAndRetrieveDataWithCredential: null,\n  signInAnonymously: null,\n  signInWithCredential: null,\n  signInWithCustomToken: null,\n  signInWithEmailAndPassword: null,\n  signInWithPhoneNumber: null,\n  signInWithEmailLink: null,\n  signInWithPopup: null,\n  signInWithRedirect: null,\n  signOut: null,\n  tenantId: null,\n  updateCurrentUser: null,\n  useDeviceLanguage: null,\n  useEmulator: null,\n  verifyPasswordResetCode: null,\n};\n","import { Injectable, Inject, Optional, NgZone, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { Observable, of, from, merge, Subject, Subscriber } from 'rxjs';\nimport { switchMap, map, observeOn, shareReplay, first, filter, switchMapTo, subscribeOn } from 'rxjs/operators';\nimport {\n  FIREBASE_OPTIONS,\n  FIREBASE_APP_NAME,\n  FirebaseOptions,\n  FirebaseAppConfig,\n  ɵPromiseProxy,\n  ɵlazySDKProxy,\n  ɵfirebaseAppFactory,\n  ɵAngularFireSchedulers,\n  ɵkeepUnstableUntilFirstFactory,\n  ɵapplyMixins\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { isPlatformServer } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport interface AngularFireAuth extends ɵPromiseProxy<firebase.auth.Auth> {}\n\ntype UseEmulatorArguments = [string, number];\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.auth.use-emulator');\n\nexport const SETTINGS = new InjectionToken<firebase.auth.AuthSettings>('angularfire2.auth.settings');\nexport const TENANT_ID = new InjectionToken<string>('angularfire2.auth.tenant-id');\nexport const LANGUAGE_CODE = new InjectionToken<string>('angularfire2.auth.langugage-code');\nexport const USE_DEVICE_LANGUAGE = new InjectionToken<boolean>('angularfire2.auth.use-device-language');\nexport const PERSISTENCE = new InjectionToken<string>('angularfire.auth.persistence');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuth {\n\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n  public readonly authState: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n  public readonly idToken: Observable<string|null>;\n\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n  public readonly user: Observable<firebase.User|null>;\n\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n  public readonly idTokenResult: Observable<firebase.auth.IdTokenResult|null>;\n\n  /**\n   * Observable of the currently signed-in user's credential, or null\n   */\n  public readonly credential: Observable<Required<firebase.auth.UserCredential>|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string|FirebaseAppConfig|null|undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // can't use the tuple here\n    @Optional() @Inject(SETTINGS) _settings: any, // can't use firebase.auth.AuthSettings here\n    @Optional() @Inject(TENANT_ID) tenantId: string | null,\n    @Optional() @Inject(LANGUAGE_CODE) languageCode: string | null,\n    @Optional() @Inject(USE_DEVICE_LANGUAGE) useDeviceLanguage: boolean | null,\n    @Optional() @Inject(PERSISTENCE) persistence: string | null,\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers);\n    const logins = new Subject<Required<firebase.auth.UserCredential>>();\n\n    const auth = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => zone.runOutsideAngular(() => {\n        const useEmulator: UseEmulatorArguments | null = _useEmulator;\n        const settings: firebase.auth.AuthSettings | null = _settings;\n        return ɵfetchInstance(`${app.name}.auth`, 'AngularFireAuth', app, () => {\n          const auth = zone.runOutsideAngular(() => app.auth());\n          if (useEmulator) {\n            // Firebase Auth doesn't conform to the useEmulator convention, let's smooth that over\n            auth.useEmulator(`http://${useEmulator.join(':')}`);\n          }\n          if (tenantId) {\n            auth.tenantId = tenantId;\n          }\n          auth.languageCode = languageCode;\n          if (useDeviceLanguage) {\n            auth.useDeviceLanguage();\n          }\n          if (settings) {\n            auth.settings = settings;\n          }\n          if (persistence) {\n            auth.setPersistence(persistence);\n          }\n          return auth;\n        }, [useEmulator, tenantId, languageCode, useDeviceLanguage, settings, persistence]);\n      })),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    if (isPlatformServer(platformId)) {\n\n      this.authState = this.user = this.idToken = this.idTokenResult = this.credential = of(null);\n\n    } else {\n\n      // HACK, as we're exporting auth.Auth, rather than auth, developers importing firebase.auth\n      //       (e.g, `import { auth } from 'firebase/app'`) are getting an undefined auth object unexpectedly\n      //       as we're completely lazy. Let's eagerly load the Auth SDK here.\n      //       There could potentially be race conditions still... but this greatly decreases the odds while\n      //       we reevaluate the API.\n      const _ = auth.pipe(first()).subscribe();\n\n      const redirectResult = auth.pipe(\n        switchMap(auth => auth.getRedirectResult().then(it => it, () => null)),\n        keepUnstableUntilFirst,\n        shareReplay({ bufferSize: 1, refCount: false }),\n      );\n\n      const fromCallback = <T = any>(cb: (sub: Subscriber<T>) => () => void) => new Observable<T>(subscriber =>\n        ({ unsubscribe: zone.runOutsideAngular(() => cb(subscriber)) })\n      );\n\n      const authStateChanged = auth.pipe(\n        switchMap(auth => fromCallback(auth.onAuthStateChanged.bind(auth))),\n      );\n\n      const idTokenChanged = auth.pipe(\n        switchMap(auth => fromCallback(auth.onIdTokenChanged.bind(auth)))\n      );\n\n      this.authState = redirectResult.pipe(\n        switchMapTo(authStateChanged),\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n      );\n\n      this.user = redirectResult.pipe(\n        switchMapTo(idTokenChanged),\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n      );\n\n      this.idToken = this.user.pipe(\n        switchMap(user => user ? from(user.getIdToken()) : of(null))\n      );\n\n      this.idTokenResult = this.user.pipe(\n        switchMap(user => user ? from(user.getIdTokenResult()) : of(null))\n      );\n\n      this.credential = merge(\n        redirectResult,\n        logins,\n        // pipe in null authState to make credential zipable, just a weird devexp if\n        // authState and user go null to still have a credential\n        this.authState.pipe(filter(it => !it))\n      ).pipe(\n        // handle the { user: { } } when a user is already logged in, rather have null\n        // TODO handle the type corcersion better\n        map(credential => credential?.user ? credential as Required<firebase.auth.UserCredential> : null),\n        subscribeOn(schedulers.outsideAngular),\n        observeOn(schedulers.insideAngular),\n      );\n\n    }\n\n    return ɵlazySDKProxy(this, auth, zone, { spy: {\n      apply: (name, _, val) => {\n        // If they call a signIn or createUser function listen into the promise\n        // this will give us the user credential, push onto the logins Subject\n        // to be consumed in .credential\n        if (name.startsWith('signIn') || name.startsWith('createUser')) {\n          // TODO fix the types, the trouble is UserCredential has everything optional\n          val.then((user: firebase.auth.UserCredential) => logins.next(user as any));\n        }\n      }\n    }});\n\n  }\n\n}\n\nɵapplyMixins(AngularFireAuth, [proxyPolyfillCompat]);\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuth } from './auth';\n\n@NgModule({\n  providers: [ AngularFireAuth ]\n})\nexport class AngularFireAuthModule { }\n"]}