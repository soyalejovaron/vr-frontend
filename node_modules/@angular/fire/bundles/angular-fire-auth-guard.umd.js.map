{"version":3,"file":"angular-fire-auth-guard.umd.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"names":["map","take","Injectable","Router","AngularFireAuth","of","switchMap","pipe","NgModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}