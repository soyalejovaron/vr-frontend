{"version":3,"file":"angular-fire-performance.umd.js","sources":["../../../src/performance/base.ts","../../../src/performance/performance.ts","../../../src/performance/performance.service.ts","../../../src/performance/performance.module.ts"],"names":["InjectionToken","of","switchMap","isPlatformBrowser","EMPTY","map","ɵfetchInstance","shareReplay","ɵlazySDKProxy","Injectable","FirebaseApp","Optional","Inject","NgZone","PLATFORM_ID","Observable","tap","ɵapplyMixins","first","ApplicationRef","NgModule"],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  trace: null,\n  instrumentationEnabled: null,\n  dataCollectionEnabled: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { FirebaseApp, ɵapplyMixins, ɵlazySDKProxy, ɵPromiseProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<firebase.performance.Performance> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n\n  private readonly performance: Observable<firebase.performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled: boolean | null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled: boolean | null,\n    private zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : EMPTY),\n      map(() => ɵfetchInstance(`performance`, 'AngularFirePerformance', app, () => {\n        const performance = zone.runOutsideAngular(() => app.performance());\n        if (instrumentationEnabled === false) {\n          performance.instrumentationEnabled = false;\n        }\n        if (dataCollectionEnabled === false) {\n          performance.dataCollectionEnabled = false;\n        }\n        return performance;\n      }, [instrumentationEnabled, dataCollectionEnabled])),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId: string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return {\n        unsubscribe: () => {\n          window.performance.mark(endMarkName);\n          window.performance.measure(traceId, startMarkName, endMarkName);\n        }\n      };\n    });\n  } else {\n    return EMPTY;\n  }\n};\n\nexport const traceUntil = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a => test(a) && traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription | undefined;\n  return source$.pipe(\n    tap(\n      a => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          if (traceSubscription) {\n            traceSubscription.unsubscribe();\n          }\n\n          traceSubscription = undefined;\n        }\n      },\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {\n      },\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => {\n      }\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nɵapplyMixins(AngularFirePerformance, [proxyPolyfillCompat]);\n","import { ApplicationRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== 'undefined' && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable()\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    // tslint:disable-next-line:no-unused-expression\n    perf.dataCollectionEnabled.then(() => {});\n  }\n}\n"]}