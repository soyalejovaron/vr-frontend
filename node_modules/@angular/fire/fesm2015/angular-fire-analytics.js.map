{"version":3,"file":"angular-fire-analytics.js","sources":["../../../src/analytics/base.ts","../../../src/analytics/analytics.ts","../../../src/analytics/user-tracking.service.ts","../../../src/analytics/screen-tracking.service.ts","../../../src/analytics/analytics.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  app: null,\n  logEvent: null,\n  setCurrentScreen: null,\n  setUserId: null,\n  setUserProperties: null,\n  setAnalyticsCollectionEnabled: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, of } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, shareReplay, switchMap, observeOn } from 'rxjs/operators';\nimport {\n  ɵAngularFireSchedulers,\n  ɵlazySDKProxy,\n  ɵPromiseProxy,\n  ɵapplyMixins,\n  FirebaseApp\n} from '@angular/fire';\nimport firebase from 'firebase/app';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\nexport interface Config {\n  [key: string]: any;\n}\n\nexport const COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.analytics.analyticsCollectionEnabled');\nexport const APP_VERSION = new InjectionToken<string>('angularfire2.analytics.appVersion');\nexport const APP_NAME = new InjectionToken<string>('angularfire2.analytics.appName');\nexport const DEBUG_MODE = new InjectionToken<boolean>('angularfire2.analytics.debugMode');\nexport const CONFIG = new InjectionToken<Config>('angularfire2.analytics.config');\n\nconst APP_NAME_KEY = 'app_name';\nconst APP_VERSION_KEY = 'app_version';\nconst DEBUG_MODE_KEY = 'debug_mode';\nconst GTAG_CONFIG_COMMAND = 'config';\nconst GTAG_FUNCTION_NAME = 'gtag'; // TODO rename these\nconst DATA_LAYER_NAME = 'dataLayer';\nconst SEND_TO_KEY = 'send_to';\n\nexport interface AngularFireAnalytics extends ɵPromiseProxy<firebase.analytics.Analytics> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAnalytics {\n\n  private measurementId: string;\n  private analyticsInitialized: Promise<void> = new Promise(() => {});\n\n  async updateConfig(config: Config) {\n    await this.analyticsInitialized;\n    window[GTAG_FUNCTION_NAME](GTAG_CONFIG_COMMAND, this.measurementId, { ...config, update: true });\n  }\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(COLLECTION_ENABLED) analyticsCollectionEnabled: boolean | null,\n    @Optional() @Inject(APP_VERSION) providedAppVersion: string | null,\n    @Optional() @Inject(APP_NAME) providedAppName: string | null,\n    @Optional() @Inject(DEBUG_MODE) debugModeEnabled: boolean | null,\n    @Optional() @Inject(CONFIG) providedConfig: Config | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n\n      window[DATA_LAYER_NAME] = window[DATA_LAYER_NAME] || [];\n\n      // It turns out we can't rely on the measurementId in the Firebase config JSON\n      // this identifier is not stable. firebase/analytics does a call to get a fresh value\n      // falling back on the one in the config. Rather than do that ourselves we should listen\n      // on our gtag function for a analytics config command\n      // e.g, ['config', measurementId, { origin: 'firebase', firebase_id }]\n      const parseMeasurementId = (...args: any[]) => {\n        if (args[0] === 'config' && args[2].origin === 'firebase') {\n          this.measurementId = args[1];\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      const patchGtag = (fn?: (...args: any[]) => void) => {\n        window[GTAG_FUNCTION_NAME] = (...args: any[]) => {\n          if (fn) {\n            fn(...args);\n          }\n          // Inject app_name and app_version into events\n          // TODO(jamesdaniels): I'm doing this as documented but it's still not\n          //   showing up in the console. Investigate. Guessing it's just part of the\n          //   whole GA4 transition mess.\n          if (args[0] === 'event' && args[2][SEND_TO_KEY] === this.measurementId) {\n            if (providedAppName) {\n              args[2][APP_NAME_KEY] = providedAppName;\n            }\n            if (providedAppVersion) {\n              args[2][APP_VERSION_KEY] = providedAppVersion;\n            }\n          }\n          if (debugModeEnabled && typeof console !== 'undefined') {\n            // tslint:disable-next-line:no-console\n            console.info(...args);\n          }\n          /**\n           * According to the gtag documentation, this function that defines a custom data layer cannot be\n           * an arrow function because 'arguments' is not an array. It is actually an object that behaves\n           * like an array and contains more information then just indexes. Transforming this into arrow function\n           * caused issue #2505 where analytics no longer sent any data.\n           */\n          // tslint:disable-next-line: only-arrow-functions\n          (function(..._args: any[]) {\n            window[DATA_LAYER_NAME].push(arguments);\n          })(...args);\n        };\n      };\n\n      // Unclear if we still need to but I was running into config/events I passed\n      // to gtag before ['js' timestamp] weren't getting parsed, so let's make a promise\n      // that resolves when firebase/analytics has configured gtag.js that we wait on\n      // before sending anything\n      const firebaseAnalyticsAlreadyInitialized = window[DATA_LAYER_NAME].some(parseMeasurementId);\n      if (firebaseAnalyticsAlreadyInitialized) {\n        this.analyticsInitialized = Promise.resolve();\n        patchGtag();\n      } else {\n        this.analyticsInitialized = new Promise(resolve => {\n          patchGtag((...args) => {\n            if (parseMeasurementId(...args)) {\n              resolve();\n            }\n          });\n        });\n      }\n\n      if (providedConfig) {\n        this.updateConfig(providedConfig);\n      }\n      if (debugModeEnabled) {\n        this.updateConfig({ [DEBUG_MODE_KEY]: 1 });\n      }\n\n    } else {\n\n      this.analyticsInitialized = Promise.resolve();\n\n    }\n\n    const analytics = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/analytics')) : EMPTY),\n      // SEMVER can switch to isSupported() when we only target v8\n      // switchMap(() => firebase.analytics.isSupported().then(it => it, () => false)),\n      // TODO server-side investigate use of the Universal Analytics API\n      // switchMap(supported => supported ? of(undefined) : EMPTY),\n      map(() => {\n        return ɵfetchInstance(`analytics`, 'AngularFireAnalytics', app, () => {\n          const analytics = app.analytics();\n          if (analyticsCollectionEnabled === false) {\n            analytics.setAnalyticsCollectionEnabled(false);\n          }\n          return analytics;\n        }, [app, analyticsCollectionEnabled, providedConfig, debugModeEnabled]);\n      }),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, analytics, zone);\n\n  }\n\n}\n\nɵapplyMixins(AngularFireAnalytics, [proxyPolyfillCompat]);\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { AngularFireAnalytics } from './analytics';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\nexport class UserTrackingService implements OnDestroy {\n\n  initialized: Promise<void>;\n  private disposables: Array<Subscription> = [];\n\n  // TODO a user properties injector\n  constructor(\n    analytics: AngularFireAnalytics,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    auth: AngularFireAuth,\n    zone: NgZone,\n  ) {\n\n    if (!isPlatformServer(platformId)) {\n      let resolveInitialized;\n      this.initialized = zone.runOutsideAngular(() => new Promise(resolve => resolveInitialized = resolve));\n      this.disposables = [\n          auth.authState.subscribe(user => {\n            analytics.setUserId(user?.uid);\n            resolveInitialized();\n          }),\n          auth.credential.subscribe(credential => {\n            if (credential) {\n              const method = credential.user.isAnonymous ? 'anonymous' : credential.additionalUserInfo.providerId;\n              if (credential.additionalUserInfo.isNewUser) {\n                analytics.logEvent('sign_up', { method });\n              }\n              analytics.logEvent('login', { method });\n            }\n          })\n      ];\n    } else {\n      this.initialized = Promise.resolve();\n    }\n\n  }\n\n  ngOnDestroy() {\n    this.disposables.forEach(it => it.unsubscribe());\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  Inject,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID\n} from '@angular/core';\nimport { of, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, groupBy, map, mergeMap, pairwise, startWith, switchMap } from 'rxjs/operators';\nimport { ActivationEnd, Router, ɵEmptyOutletComponent } from '@angular/router';\nimport { AngularFireAnalytics } from './analytics';\nimport { Title } from '@angular/platform-browser';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UserTrackingService } from './user-tracking.service';\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2 ** 32 - 1)) - 2 ** 31;\n\nconst knownScreenInstanceIDs: { [key: string]: number } = {};\n\nconst getScreenInstanceID = (params: { [key: string]: any }) => {\n  // unique the screen class against the outlet name\n  const screenInstanceKey = [\n    params[SCREEN_CLASS_KEY],\n    params[OUTLET_KEY]\n  ].join(SCREEN_INSTANCE_DELIMITER);\n  if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n    return knownScreenInstanceIDs[screenInstanceKey];\n  } else {\n    const ret = nextScreenInstanceID++;\n    knownScreenInstanceIDs[screenInstanceKey] = ret;\n    return ret;\n  }\n};\n\n@Injectable()\nexport class ScreenTrackingService implements OnDestroy {\n\n  private disposable: Subscription | undefined;\n\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() router: Router,\n    @Optional() title: Title,\n    componentFactoryResolver: ComponentFactoryResolver,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() userTrackingService: UserTrackingService,\n  ) {\n    if (!router || !isPlatformBrowser(platformId)) {\n      return this;\n    }\n    zone.runOutsideAngular(() => {\n      const activationEndEvents = router.events.pipe(filter<ActivationEnd>(e => e instanceof ActivationEnd));\n      this.disposable = activationEndEvents.pipe(\n        switchMap(activationEnd => {\n          // router parseUrl is having trouble with outlets when they're empty\n          // e.g, /asdf/1(bob://sally:asdf), so put another slash in when empty\n          const urlTree = router.parseUrl(router.url.replace(/(?:\\().+(?:\\))/g, a => a.replace('://', ':///')));\n          const pagePath = urlTree.root.children[activationEnd.snapshot.outlet]?.toString() || '';\n          const actualSnapshot = router.routerState.root.children.map(it => it).find(it => it.outlet === activationEnd.snapshot.outlet);\n\n          if (!actualSnapshot) {\n            return of(null);\n          }\n\n          let actualDeep = actualSnapshot;\n          while (actualDeep.firstChild) {\n            actualDeep = actualDeep.firstChild;\n          }\n          const screenName = actualDeep.pathFromRoot.map(s => s.routeConfig?.path).filter(it => it).join('/') || '/';\n\n          const params = {\n            [SCREEN_NAME_KEY]: screenName,\n            [PAGE_PATH_KEY]: `/${pagePath}`,\n            [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n            [FIREBASE_SCREEN_NAME_KEY]: screenName,\n            [OUTLET_KEY]: activationEnd.snapshot.outlet\n          };\n          if (title) {\n            params[PAGE_TITLE_KEY] = title.getTitle();\n          }\n\n          let component = actualSnapshot.component;\n          if (component) {\n            if (component === ɵEmptyOutletComponent) {\n              let deepSnapshot = activationEnd.snapshot;\n              // TODO when might there be mutple children, different outlets? explore\n              while (deepSnapshot.firstChild) {\n                deepSnapshot = deepSnapshot.firstChild;\n              }\n              component = deepSnapshot.component;\n            }\n          } else {\n            component = activationEnd.snapshot.component;\n          }\n\n          if (typeof component === 'string') {\n            return of({ ...params, [SCREEN_CLASS_KEY]: component });\n          } else if (component) {\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n            return of({ ...params, [SCREEN_CLASS_KEY]: componentFactory.selector });\n          } else {\n            // lazy loads cause extra activations, ignore\n            return of(null);\n          }\n        }),\n        filter(it => it),\n        map(params => ({\n          [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n          [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n          ...params\n        })),\n        groupBy(it => it[OUTLET_KEY]),\n        mergeMap(it => it.pipe(\n          distinctUntilChanged((a, b) => JSON.stringify(a) === JSON.stringify(b)),\n          startWith(undefined),\n          pairwise(),\n          map(([prior, current]) =>\n            prior ? {\n              [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n              [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n              [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n              ...current\n            } : current\n          ),\n          switchMap(async params => {\n            if (userTrackingService) {\n              await userTrackingService.initialized;\n            }\n            return await analytics.logEvent(SCREEN_VIEW_EVENT, params);\n          })\n        ))\n      ).subscribe();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.disposable) {\n      this.disposable.unsubscribe();\n    }\n  }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { ScreenTrackingService } from './screen-tracking.service';\nimport { AngularFireAnalytics } from './analytics';\nimport { UserTrackingService } from './user-tracking.service';\n\n@NgModule({\n  providers: [ AngularFireAnalytics ]\n})\nexport class AngularFireAnalyticsModule {\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() screenTracking: ScreenTrackingService,\n    @Optional() userTracking: UserTrackingService\n  ) {\n    // calling anything on analytics will eagerly load the SDK\n    // tslint:disable-next-line:no-unused-expression\n    analytics.app.then(() => {});\n  }\n}\n"]}