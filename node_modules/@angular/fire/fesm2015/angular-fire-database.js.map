{"version":3,"file":"angular-fire-database.js","sources":["../../../src/database/utils.ts","../../../src/database/observable/fromRef.ts","../../../src/database/list/changes.ts","../../../src/database/list/utils.ts","../../../src/database/list/snapshot-changes.ts","../../../src/database/list/state-changes.ts","../../../src/database/list/audit-trail.ts","../../../src/database/list/data-operation.ts","../../../src/database/list/remove.ts","../../../src/database/list/create-reference.ts","../../../src/database/object/snapshot-changes.ts","../../../src/database/object/create-reference.ts","../../../src/database/database.ts","../../../src/database/database.module.ts"],"names":["USE_AUTH_EMULATOR"],"mappings":"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","sourcesContent":["import { DatabaseReference, FirebaseOperation, FirebaseOperationCases, PathReference } from './interfaces';\nimport firebase from 'firebase/app';\n\nexport function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\nexport function isFirebaseDataSnapshot(value: any): boolean {\n  return typeof value.exportVal === 'function';\n}\n\nexport function isNil(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isFirebaseRef(value: any): boolean {\n  return typeof value.set === 'function';\n}\n\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param database - Firebase Database\n * @param pathRef - Database path, relative or absolute\n */\nexport function getRef(database: firebase.database.Database, pathRef: PathReference): DatabaseReference {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef as DatabaseReference\n    : database.ref(pathRef as string);\n}\n\nexport function checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases): Promise<void> {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n","import { AngularFireAction, DatabaseQuery, DatabaseSnapshot, ListenEvent } from '../interfaces';\nimport { asyncScheduler, Observable, SchedulerLike } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\ninterface SnapshotPrevKey<T> {\n  snapshot: DatabaseSnapshot<T>;\n  prevKey: string | null | undefined;\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param listenType 'on' or 'once'\n * @param scheduler - Rxjs scheduler\n */\nexport function fromRef<T>(ref: DatabaseQuery,\n                           event: ListenEvent,\n                           listenType = 'on',\n                           scheduler: SchedulerLike = asyncScheduler\n): Observable<AngularFireAction<DatabaseSnapshot<T>>> {\n  return new Observable<SnapshotPrevKey<T>>(subscriber => {\n    let fn: any | null = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({ snapshot, prevKey });\n      });\n      if (listenType === 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err));\n    });\n\n    if (listenType === 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return {\n        unsubscribe() {\n        }\n      };\n    }\n  }).pipe(\n    map(payload => {\n      const { snapshot, prevKey } = payload;\n      let key: string | null = null;\n      if (snapshot.exists()) {\n        key = snapshot.key;\n      }\n      return { type: event, payload: snapshot, prevKey, key };\n    }),\n    share()\n  );\n}\n","import { fromRef } from '../observable/fromRef';\nimport { merge, Observable, of, SchedulerLike } from 'rxjs';\n\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { isNil } from '../utils';\n\nimport { distinctUntilChanged, scan, switchMap } from 'rxjs/operators';\n\nexport function listChanges<T = any>(ref: DatabaseQuery, events: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(\n    switchMap(snapshotAction => {\n      const childEvent$ = [of(snapshotAction)];\n      events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n      return merge(...childEvent$).pipe(scan(buildView, []));\n    }),\n    distinctUntilChanged()\n  );\n}\n\nfunction positionFor<T>(changes: SnapshotAction<T>[], key) {\n  const len = changes.length;\n  for (let i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction positionAfter<T>(changes: SnapshotAction<T>[], prevKey?: string) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const { payload, prevKey, key } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = { payload, type: 'value', prevKey, key: payload.key };\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous && previous.key || null) !== prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n","import { isNil } from '../utils';\n\nexport function validateEventsArray(events?: any[]) {\n  if (isNil(events) || events.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { listChanges } from './changes';\nimport { ChildEvent, DatabaseQuery, SnapshotAction } from '../interfaces';\nimport { validateEventsArray } from './utils';\n\nexport function snapshotChanges<T>(\n  query: DatabaseQuery,\n  events?: ChildEvent[],\n  scheduler?: SchedulerLike\n): Observable<SnapshotAction<T>[]> {\n  events = validateEventsArray(events);\n  return listChanges<T>(query, events, scheduler);\n}\n","import { ChildEvent, DatabaseQuery } from '../interfaces';\nimport { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { merge, SchedulerLike } from 'rxjs';\n\nexport function stateChanges<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike) {\n  events = validateEventsArray(events);\n  const childEvent$ = events.map(event => fromRef<T>(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n","import { AngularFireAction, ChildEvent, DatabaseQuery, DataSnapshot, SnapshotAction } from '../interfaces';\nimport { stateChanges } from './state-changes';\nimport { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\n\nimport { map, scan, skipWhile, withLatestFrom } from 'rxjs/operators';\n\nexport function auditTrail<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  const auditTrail$ = stateChanges<T>(query, events)\n    .pipe(\n      scan((current, action) => [...current, action], [])\n    );\n  return waitForLoaded<T>(query, auditTrail$, scheduler);\n}\n\ninterface LoadedMetadata {\n  data: AngularFireAction<DataSnapshot>;\n  lastKeyToLoad: any;\n}\n\nfunction loadedData<T>(query: DatabaseQuery, scheduler?: SchedulerLike): Observable<LoadedMetadata> {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef<T>(query, 'value', 'on', scheduler)\n  .pipe(\n    map(data => {\n      // Store the last key in the data set\n      let lastKeyToLoad;\n      // Loop through loaded dataset to find the last key\n      data.payload.forEach(child => {\n        lastKeyToLoad = child.key; return false;\n      });\n      // return data set and the current last key loaded\n      return { data, lastKeyToLoad };\n    })\n  );\n}\n\nfunction waitForLoaded<T>(query: DatabaseQuery, action$: Observable<SnapshotAction<T>[]>, scheduler?: SchedulerLike) {\n  const loaded$ = loadedData<T>(query, scheduler);\n  return loaded$\n    .pipe(\n      withLatestFrom(action$),\n      // Get the latest values from the \"loaded\" and \"child\" datasets\n      // We can use both datasets to form an array of the latest values.\n      map(([loaded, actions]) => {\n        // Store the last key in the data set\n        const lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys };\n      }),\n      // This is the magical part, only emit when the last load key\n      // in the dataset has been loaded by a child event. At this point\n      // we can assume the dataset is \"whole\".\n      skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n      // Pluck off the meta data because the user only cares\n      // to iterate through the snapshots\n      map(meta => meta.actions)\n    );\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\nexport function createDataOperationMethod<T>(ref: DatabaseReference, operation: string) {\n  return function dataOperation<T>(item: FirebaseOperation, value: T) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string)[operation](value),\n      firebaseCase: () => (item as DatabaseReference)[operation](value),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref[operation](value)\n    });\n  };\n}\n","import { DatabaseReference, DatabaseSnapshot, FirebaseOperation } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nexport function createRemoveMethod<T>(ref: DatabaseReference) {\n  return function remove(item?: FirebaseOperation): any {\n    if (!item) { return ref.remove(); }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(item as string).remove(),\n      firebaseCase: () => (item as DatabaseReference).remove(),\n      snapshotCase: () => (item as DatabaseSnapshot<T>).ref.remove()\n    });\n  };\n}\n","import { AngularFireList, ChildEvent, DatabaseQuery } from '../interfaces';\nimport { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { AngularFireDatabase } from '../database';\nimport { map } from 'rxjs/operators';\n\nexport function createListReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireList<T> {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  const refInZone = afDatabase.schedulers.ngZone.run(() => query.ref);\n  return {\n    query,\n    update: createDataOperationMethod<Partial<T>>(refInZone, 'update'),\n    set: createDataOperationMethod<T>(refInZone, 'set'),\n    push: (data: T) => refInZone.push(data),\n    remove: createRemoveMethod(refInZone),\n    snapshotChanges(events?: ChildEvent[]) {\n      return snapshotChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    stateChanges(events?: ChildEvent[]) {\n      return stateChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    auditTrail(events?: ChildEvent[]) {\n      return auditTrail<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    valueChanges<K extends string>(events?: ChildEvent[], options?: {idField?: K}) {\n      const snapshotChanges$ = snapshotChanges<T>(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(\n        map(actions => actions.map(a => {\n          if (options && options.idField) {\n            return {\n              ...a.payload.val() as T,\n              ...{\n                [options.idField]: a.key\n              }\n            };\n          } else {\n            return a.payload.val() as T;\n          }\n        })),\n        afDatabase.keepUnstableUntilFirst\n      );\n    }\n  };\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\nimport { DatabaseQuery, SnapshotAction } from '../interfaces';\n\nexport function createObjectSnapshotChanges<T>(query: DatabaseQuery, scheduler?: SchedulerLike) {\n  return function snapshotChanges(): Observable<SnapshotAction<T>> {\n    return fromRef(query, 'value', 'on', scheduler);\n  };\n}\n","import { map } from 'rxjs/operators';\nimport { AngularFireObject, DatabaseQuery } from '../interfaces';\nimport { createObjectSnapshotChanges } from './snapshot-changes';\nimport { AngularFireDatabase } from '../database';\n\nexport function createObjectReference<T= any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireObject<T> {\n  return {\n    query,\n    snapshotChanges<T>() {\n      return createObjectSnapshotChanges<T>(query, afDatabase.schedulers.outsideAngular)().pipe(\n        afDatabase.keepUnstableUntilFirst\n      );\n    },\n    update(data: Partial<T>) { return query.ref.update(data as any) as Promise<void>; },\n    set(data: T) { return query.ref.set(data) as Promise<void>; },\n    remove() { return query.ref.remove() as Promise<void>; },\n    valueChanges<T>() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(\n        afDatabase.keepUnstableUntilFirst,\n        map(action => action.payload.exists() ? action.payload.val() as T : null)\n      );\n    },\n  };\n}\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { AngularFireList, AngularFireObject, DatabaseQuery, PathReference, QueryFn } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵkeepUnstableUntilFirstFactory,\n} from '@angular/fire';\nimport { Observable } from 'rxjs';\nimport 'firebase/database';\nimport { USE_EMULATOR as USE_AUTH_EMULATOR } from '@angular/fire/auth';\nimport firebase from 'firebase/app';\nimport { ɵfetchInstance, ɵlogAuthEmulatorError } from '@angular/fire';\n\nexport const URL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\n// SEMVER(7): use Parameters to detirmine the useEmulator arguments\n// TODO(jamesdaniels): don't hardcode, but having tyepscript issues with firebase.database.Database\n// type UseEmulatorArguments = Parameters<typeof firebase.database.Database.prototype.useEmulator>;\ntype UseEmulatorArguments = [string, number];\nexport const USE_EMULATOR = new InjectionToken<UseEmulatorArguments>('angularfire2.database.use-emulator');\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireDatabase {\n  public readonly database: firebase.database.Database;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n  public readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    @Optional() @Inject(URL) databaseURL: string | null,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone,\n    @Optional() @Inject(USE_EMULATOR) _useEmulator: any, // tuple isn't working here\n    @Optional() @Inject(USE_AUTH_EMULATOR) useAuthEmulator: any,\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers);\n\n    const useEmulator: UseEmulatorArguments | null = _useEmulator;\n    const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n\n    if (!firebase.auth && useAuthEmulator) {\n      ɵlogAuthEmulatorError();\n    }\n\n    this.database = ɵfetchInstance(`${app.name}.database.${databaseURL}`, 'AngularFireDatabase', app, () => {\n      const database = zone.runOutsideAngular(() => app.database(databaseURL || undefined));\n      if (useEmulator) {\n        database.useEmulator(...useEmulator);\n      }\n      return database;\n    }, [useEmulator]);\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    let query: DatabaseQuery = ref;\n    if (queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T> {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => getRef(this.database, pathOrRef));\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    const ref = this.schedulers.ngZone.runOutsideAngular(() => this.database.ref());\n    return ref.push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n","import { NgModule } from '@angular/core';\nimport { AngularFireDatabase } from './database';\n\n@NgModule({\n  providers: [ AngularFireDatabase ]\n})\nexport class AngularFireDatabaseModule { }\n"]}