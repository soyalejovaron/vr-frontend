{"version":3,"file":"angular-fire-performance.js","sources":["../../../src/performance/base.ts","../../../src/performance/performance.ts","../../../src/performance/performance.service.ts","../../../src/performance/performance.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const proxyPolyfillCompat = {\n  trace: null,\n  instrumentationEnabled: null,\n  dataCollectionEnabled: null,\n};\n","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { EMPTY, Observable, of, Subscription } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { FirebaseApp, ɵapplyMixins, ɵlazySDKProxy, ɵPromiseProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\nimport { proxyPolyfillCompat } from './base';\nimport { ɵfetchInstance } from '@angular/fire';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<firebase.performance.Performance> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n\n  private readonly performance: Observable<firebase.performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled: boolean | null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled: boolean | null,\n    private zone: NgZone,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : EMPTY),\n      map(() => ɵfetchInstance(`performance`, 'AngularFirePerformance', app, () => {\n        const performance = zone.runOutsideAngular(() => app.performance());\n        if (instrumentationEnabled === false) {\n          performance.instrumentationEnabled = false;\n        }\n        if (dataCollectionEnabled === false) {\n          performance.dataCollectionEnabled = false;\n        }\n        return performance;\n      }, [instrumentationEnabled, dataCollectionEnabled])),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId: string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return {\n        unsubscribe: () => {\n          window.performance.mark(endMarkName);\n          window.performance.measure(traceId, startMarkName, endMarkName);\n        }\n      };\n    });\n  } else {\n    return EMPTY;\n  }\n};\n\nexport const traceUntil = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a => test(a) && traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T = any>(\n  name: string,\n  test: (a: T) => boolean,\n  options?: { orComplete?: boolean }\n) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription | undefined;\n  return source$.pipe(\n    tap(\n      a => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          if (traceSubscription) {\n            traceSubscription.unsubscribe();\n          }\n\n          traceSubscription = undefined;\n        }\n      },\n      () => {\n      },\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {\n      },\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => {\n      }\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T = any>(name: string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {\n      },\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nɵapplyMixins(AngularFirePerformance, [proxyPolyfillCompat]);\n","import { ApplicationRef, Injectable, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== 'undefined' && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable()\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    // tslint:disable-next-line:no-unused-expression\n    perf.dataCollectionEnabled.then(() => {});\n  }\n}\n"]}